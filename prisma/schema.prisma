generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  password String
  name     String @map("full_name")
  phone    String @unique @default("")

  orders    Order[]
  favorites Product[]
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String   @unique
  slug        String   @unique
  brand       String
  description String
  price       Int
  images      String[]
  volume      String

  availability AvailabaleStatus @default(HAVE)
  categoryId   Int?             @map("category_id")
  userId       Int?             @map("user_id")
  orderItems   OrderItem[]

  category Category? @relation(fields: [categoryId], references: [id])

  users User? @relation(fields: [userId], references: [id])
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String    @unique
  slug     String    @unique
  products Product[]
}

model Order {
  id        Int             @id @default(autoincrement())
  createdAt DateTime        @default(now()) @map("created_at")
  updatedAt DateTime        @updatedAt @map("updated_at")
  status    EnumOrderStatus @default(PENDING)
  total     Int
  userId    Int             @map("user_id")
  user      User            @relation(fields: [userId], references: [id])
  items     OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int
  price    Int

  orderId   Int?    @map("order_id")
  productId Int     @map("product_id")
  order     Order?  @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@map("Order_item")
}

enum EnumOrderStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}

enum AvailabaleStatus {
  HAVE
  DONOT
}
